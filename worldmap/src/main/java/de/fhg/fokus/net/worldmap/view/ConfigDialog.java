/**
 * worldmap - an extension to JMapViewer which provides additional
 *            functionality. New functions allow setting markers,
 *            adding layers, and printing tracks on the map. (see
 *            http://wiki.openstreetmap.org/wiki/JMapViewer for more
 *            information on JMapViewer)
 *
 * Copyright (c) 2011
 *
 * Fraunhofer FOKUS
 * www.fokus.fraunhofer.de
 *
 * in cooperation with
 *
 * Technical University Berlin
 * www.av.tu-berlin.de
 *
 * Ramon Masek <ramon.masek@fokus.fraunhofer.de>
 * Christian Henke <c.henke@tu-berlin.de>
 * Carsten Schmoll <carsten.schmoll@fokus.fraunhofer.de>
 * Julian Vetter <julian.vetter@fokus.fraunhofer.de>
 * Jens Krenzin <jens.krenzin@fokus.fraunhofer.de>
 * Michael Gehring <michael.gehring@fokus.fraunhofer.de>
 * Tacio Grespan Santos
 * Fabian Wolff
 *
 * For questions/comments contact packettracking@fokus.fraunhofer.de
 *
 * This program is free software; you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software Foundation;
 * either version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, see <http://www.gnu.org/licenses/>.
 */

package de.fhg.fokus.net.worldmap.view;

import javax.swing.JCheckBox;
import javax.swing.JComboBox;

/**
 * @author FhG-FOKUS NETwork Research
 */
public class ConfigDialog extends javax.swing.JDialog {
	private static final long serialVersionUID = -5421681623808230829L;

    public JCheckBox getJCheckBoxOneHttpConnection() {
        return jCheckBoxOneHttpConnection;
    }

    public JCheckBox getjCheckBoxShowPalette() {
        return jCheckBoxShowPalette;
    }

    public JCheckBox getJCheckBoxShowTileGrid() {
        return jCheckBoxShowTileGrid;
    }

    public JComboBox getJComboBoxTileSource() {
        return jComboBoxTileSource;
    }
	/** Creates new form JMapViewerConfig */
    public ConfigDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonClose = new javax.swing.JButton();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanelMapConfiguration = new javax.swing.JPanel();
        jComboBoxTileSource = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jCheckBoxShowTileGrid = new javax.swing.JCheckBox();
        jCheckBoxOneHttpConnection = new javax.swing.JCheckBox();
        jPanel1 = new javax.swing.JPanel();
        jCheckBoxShowPalette = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Map Configuration");

        jButtonClose.setText("Close");
        jButtonClose.setToolTipText("cancel changes");
        jButtonClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCloseActionPerformed(evt);
            }
        });

        jPanelMapConfiguration.setBorder(null);

        jComboBoxTileSource.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jLabel1.setText("Tile Provider");

        jCheckBoxShowTileGrid.setText("Show Tile Grid");
        jCheckBoxShowTileGrid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxShowTileGridActionPerformed(evt);
            }
        });

        jCheckBoxOneHttpConnection.setText("Use only one HTTP connection");
        jCheckBoxOneHttpConnection.setToolTipText("Use this in case map server seems to be overloaded.");

        javax.swing.GroupLayout jPanelMapConfigurationLayout = new javax.swing.GroupLayout(jPanelMapConfiguration);
        jPanelMapConfiguration.setLayout(jPanelMapConfigurationLayout);
        jPanelMapConfigurationLayout.setHorizontalGroup(
            jPanelMapConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMapConfigurationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMapConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMapConfigurationLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(jComboBoxTileSource, 0, 315, Short.MAX_VALUE))
                    .addComponent(jCheckBoxShowTileGrid)
                    .addComponent(jCheckBoxOneHttpConnection))
                .addContainerGap())
        );
        jPanelMapConfigurationLayout.setVerticalGroup(
            jPanelMapConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMapConfigurationLayout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanelMapConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBoxTileSource, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCheckBoxShowTileGrid)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxOneHttpConnection)
                .addGap(145, 145, 145))
        );

        jTabbedPane1.addTab("Map Source", jPanelMapConfiguration);

        jCheckBoxShowPalette.setSelected(true);
        jCheckBoxShowPalette.setText("Show Palette");
        jCheckBoxShowPalette.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxShowPaletteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxShowPalette)
                .addContainerGap(315, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxShowPalette)
                .addContainerGap(229, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Tools", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 445, Short.MAX_VALUE)
                    .addComponent(jButtonClose, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 304, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButtonClose)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCloseActionPerformed
    this.setVisible(false);
}//GEN-LAST:event_jButtonCloseActionPerformed

    private void jCheckBoxShowTileGridActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxShowTileGridActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_jCheckBoxShowTileGridActionPerformed

    private void jCheckBoxShowPaletteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxShowPaletteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBoxShowPaletteActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonClose;
    private javax.swing.JCheckBox jCheckBoxOneHttpConnection;
    private javax.swing.JCheckBox jCheckBoxShowPalette;
    private javax.swing.JCheckBox jCheckBoxShowTileGrid;
    private javax.swing.JComboBox jComboBoxTileSource;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanelMapConfiguration;
    private javax.swing.JTabbedPane jTabbedPane1;
    // End of variables declaration//GEN-END:variables

}
