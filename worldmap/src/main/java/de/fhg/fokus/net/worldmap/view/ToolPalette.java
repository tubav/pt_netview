/**
 * worldmap - an extension to JMapViewer which provides additional
 *            functionality. New functions allow setting markers,
 *            adding layers, and printing tracks on the map. (see
 *            http://wiki.openstreetmap.org/wiki/JMapViewer for more
 *            information on JMapViewer)
 *
 * Copyright (c) 2011
 *
 * Fraunhofer FOKUS
 * www.fokus.fraunhofer.de
 *
 * in cooperation with
 *
 * Technical University Berlin
 * www.av.tu-berlin.de
 *
 * Ramon Masek <ramon.masek@fokus.fraunhofer.de>
 * Christian Henke <c.henke@tu-berlin.de>
 * Carsten Schmoll <carsten.schmoll@fokus.fraunhofer.de>
 * Julian Vetter <julian.vetter@fokus.fraunhofer.de>
 * Jens Krenzin <jens.krenzin@fokus.fraunhofer.de>
 * Michael Gehring <michael.gehring@fokus.fraunhofer.de>
 * Tacio Grespan Santos
 * Fabian Wolff
 *
 * For questions/comments contact packettracking@fokus.fraunhofer.de
 *
 * This program is free software; you can redistribute it and/or modify it under the
 * terms of the GNU General Public License as published by the Free Software Foundation;
 * either version 3 of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
 * FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for more
 * details.
 *
 * You should have received a copy of the GNU General Public License along with
 * this program; if not, see <http://www.gnu.org/licenses/>.
 */

package de.fhg.fokus.net.worldmap.view;

import java.awt.AlphaComposite;
import java.awt.Color;
import java.awt.Composite;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.RenderingHints;

import javax.swing.JButton;
import javax.swing.JToggleButton;
import javax.swing.JToolBar;

/**
 *
 * @author FhG-FOKUS NETwork Research
 */
public class ToolPalette extends javax.swing.JPanel {

   public JToggleButton getjToggleButtonTrackPlayer() {
      return jToggleButtonTrackPlayer;
   }


    public JButton getjButtonLayers() {
        return jButtonLayers;
    }


    public JButton getjButtonRefresh() {
        return jButtonRefresh;
    }

    public JButton getjButtonZoomIn() {
        return jButtonZoomIn;
    }

    public JButton getjButtonZoomOut() {
        return jButtonZoomOut;
    }

    public JToolBar getjToolBarBox() {
        return jToolBarBox;
    }

	private static final long serialVersionUID = -4294627811979638162L;
	/** Creates new form ToolBox */
    public ToolPalette() {
        initComponents();
    }
    private final Composite bgComposite = AlphaComposite.getInstance(AlphaComposite.SRC_OVER, 0.5f);
    private Color bgColor = new Color(200, 200, 200);
    @Override
    protected void paintComponent(Graphics g) {
    	Graphics2D g2 = (Graphics2D)g;
    	g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
    	Composite oldComposite = g2.getComposite();
    	
    	g2.setComposite(bgComposite);
    	g2.setColor(bgColor);
    	g2.fillRoundRect(0,0, getWidth(), getHeight(), 10, 10);
    	g2.setComposite(oldComposite);
    
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToolBarBox = new javax.swing.JToolBar();
        jButtonZoomIn = new javax.swing.JButton();
        jButtonZoomOut = new javax.swing.JButton();
        jButtonLayers = new javax.swing.JButton();
        jButtonRefresh = new javax.swing.JButton();
        jToggleButtonTrackPlayer = new javax.swing.JToggleButton();

        jToolBarBox.setFloatable(false);
        jToolBarBox.setOrientation(1);
        jToolBarBox.setRollover(true);

        jButtonZoomIn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/fhg/fokus/net/worldmap/view/resources/zoom_in.png"))); // NOI18N
        jButtonZoomIn.setToolTipText("zoom out");
        jButtonZoomIn.setFocusable(false);
        jToolBarBox.add(jButtonZoomIn);

        jButtonZoomOut.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/fhg/fokus/net/worldmap/view/resources/zoom_out.png"))); // NOI18N
        jButtonZoomOut.setToolTipText("zoom in");
        jButtonZoomOut.setFocusable(false);
        jToolBarBox.add(jButtonZoomOut);

        jButtonLayers.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/fhg/fokus/net/worldmap/view/resources/layers.png"))); // NOI18N
        jButtonLayers.setFocusable(false);
        jButtonLayers.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonLayers.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBarBox.add(jButtonLayers);

        jButtonRefresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/fhg/fokus/net/worldmap/view/resources/view-refresh.png"))); // NOI18N
        jButtonRefresh.setToolTipText("Reload map");
        jButtonRefresh.setFocusable(false);
        jButtonRefresh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonRefresh.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBarBox.add(jButtonRefresh);

        jToggleButtonTrackPlayer.setIcon(new javax.swing.ImageIcon(getClass().getResource("/de/fhg/fokus/net/worldmap/view/resources/track-layers.png"))); // NOI18N
        jToggleButtonTrackPlayer.setFocusable(false);
        jToggleButtonTrackPlayer.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jToggleButtonTrackPlayer.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        jToolBarBox.add(jToggleButtonTrackPlayer);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBarBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jToolBarBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonLayers;
    private javax.swing.JButton jButtonRefresh;
    private javax.swing.JButton jButtonZoomIn;
    private javax.swing.JButton jButtonZoomOut;
    private javax.swing.JToggleButton jToggleButtonTrackPlayer;
    private javax.swing.JToolBar jToolBarBox;
    // End of variables declaration//GEN-END:variables

}
